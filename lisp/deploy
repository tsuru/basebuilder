#!/bin/bash -el

SOURCE_DIR=/var/lib/tsuru
source ${SOURCE_DIR}/base/deploy
source ${SOURCE_DIR}/config

cd ${CURRENT_DIR}

SYSTEM_PATH=`find . -name "*.asd"`
SYSTEM_FILE=${SYSTEM_PATH##*/}
SYSTEM_NAME=${SYSTEM_FILE%.asd}

if [ -d "${HOME}/quicklisp" ]; then
  echo "Updating quicklisp...."
  sbcl --non-interactive --eval "(ql:update-all-dists :prompt nil)" --eval "(ql:update-client :prompt nil)"
else
  echo "Downloading quicklisp...."
  wget http://beta.quicklisp.org/quicklisp.lisp

  echo "Installing quicklisp...."
  sbcl --non-interactive --load quicklisp.lisp --eval '(quicklisp-quickstart:install)' --eval '(setf ql-util::*do-not-prompt* t)' --eval '(ql:add-to-init-file)'

  echo "Cleaning up quicklisp install...."
  rm quicklisp.lisp

  echo "Setting up application inside quicklisp...."
  ln -s ${CURRENT_DIR} ${HOME}/quicklisp/local-projects/${SYSTEM_NAME}
fi

if [ -f "${CURRENT_DIR}/requirements.txt" ]; then
  echo "External quicklisp dependencies found, installing...."
  cd ${HOME}/quicklisp/local-projects
  lines=$(<${CURRENT_DIR}/requirements.txt)
  for line in $lines
  do
    [[ "$line" =~ ^.*\/([^\/\.]+)(\.git)?$ ]]
    if [ -d "${BASH_REMATCH[1]}" ]; then
      cd "${BASH_REMATCH[1]}"
      if [ "$(git remote -v | head -n 1 | awk '{print $2}')" = "$line" ]; then
        echo "Updating $line"
        git pull 
        cd ..
      else
        echo "Git url changed for ${BASH_REMATCH[1]}, removing and cloning again"
        cd ..
        rm -rf "${BASH_REMATCH[1]}"
        git clone $line
      fi
    else
      echo "Installing ${line}...."
      git clone $line
    fi
  done
  echo "Done installing external dependencies"
  for dir in *
  do
    if [[ ! -d $dir || $dir == $SYSTEM_NAME ]]; then
      continue
    fi 
    match=0
    for line in $lines
    do
      [[ "$line" =~ ^.*\/([^\/\.]+)(\.git)?$ ]]
      if [ "$dir" = "${BASH_REMATCH[1]}" ]; then
        match=1
      fi
    done
    if [ $match -eq 0 ]; then
      rm -rf $dir
      echo "Removed $dir because it is not in requirements.txt"
    fi
  done
fi

echo "Compiling application...."
sbcl --non-interactive --eval "(ql:quickload \"${SYSTEM_NAME}\")"

echo "Running python hooks...."
${VENV_DIR}/bin/python ${SOURCE_DIR}/hooks.py
